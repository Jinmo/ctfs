r
b 
d
r
b op_i32_Load_i8_r
r
r
bt
p _mem
p *_mem
si
si
r
r
si
x/xg $rax
x/s $rax
p operand
locals
p/x operand
x/xg $rax
x/xg $rax-0x1000
vmmap $rax
x/xg 0x7ffff7906000-0x5687
p/x 0x7ffff7906000-0x56af
p/x $rax
p/x $rax-0x5687
x/xg $rax-0x5687
x/xg $rax-0x5687+0x400
x/xg $rax-0x5687+0x400
q
r
r < a
r ww < a
p/x 0x800058f1c195
disass
p/x $rdx
p/x $rax-$rdx
vmmap $rdx
vmmap
q
r ww < a
p/x $rdx-$rax
p/x $rax-$rdx
p/x $rdx
x/64x $rdx
x/64xg $rdx
x/128x $rdx
bt
x/xg 0x5555555cef48
q
r < aa
r < a
r ww < a
p/x $rax-$rdx
x/64xg $rdx
p/x $rdx
vmmap $rdx
vmmap libc
p/x 0x7ffff7fa1000-$rdx
p/x $rax-$rdx
p/x 0xf0ffff-0x10644cf
p/x -(0xf0ffff-0x10644cf)
q
r ww < a
r
r `bash 1.sh` ww < a
r
r
p/x $rax-$rdx
p/x $rax-$rdx-0xf0ffff
x/xg $rdx+0xffffff
x/xg $rdx+0xffffff
r
p/x $rax-$rdx
p (long)&__free_hook-$rdx
p/x (long)&__free_hook-$rdx
r
r
b exit
r
p __free_hook
p __free_hook
si
ni
si
vmmap $rip
si
x/xg $rip+0x1d1a1+6
p/x $func=_rtld_global+3848
p/x $func=(long)&_rtld_global+3848
p/x $arg=(long)$rdi
r
disass
p/x $rax-0xffffff
x/xg $rax-0xffffff
p $func-((long)$rax-0xffffff)
p/x $func-((long)$rax-0xffffff)
r
x/xg $rax
x/xg $rax-


x/xg $rax-0x67f740
disass
x/xg $rbp-0x18
x/xg $rax-0x67f740
p/x $func-((long)$rax-*(long *)($rbp-0x18))
p/x $func-((long)$rax-*(long *)($rbp-0x18))
r
c
p pthread_mutex_lock
p pthread_mutex_lock
p system
r
b system
c
r
x/xg $func
x/xg 0x00007ffff7c4ffc0
r
r
x/xg 0x00007ffff7c4ffc0
x/xg $func
r
r
x/xg $rax-0xffffff
x/xg $rax-0xffffff+0x6f7f40
r
x/xg $func
r
r
r
r
r
x/xg $func
p system
c
r
p/x $arg-($rax-0xffffff)
r
c
x/s $rdi
c
q
c
p/x $func-((long)$rax-*(long *)($rbp-0x18))
p/x $func-((long)$rax-*(long *)($rbp-0x18))
p/x ((long)$rax-*(long *)($rbp-0x18))
x/xg ((long)$rax-*(long *)($rbp-0x18))
x/g $rbp-0x1
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
x/g $rbp-0x18
set $rax=$rsp
c
set $rax=$rsp
c
set $rax=$rsp
c
c
q
c
set $rax=$rsp
c
b exit
disass
bt
vmmap
0x7f64e4caa000
bins
bins
bins
bins
q
bins
vmmap
bins
q
q
q
c
q
c
q
c
x/xg $rax-0xffffff
p/x -0xffffff
p/x -0xffffff + $rax
p/x -0xffffff + $rax + 0x6a5ff0
x/xg -0xffffff + $rax + 0x6a5ff0
x/xg -0xffffff + $rax + 0x6a5ff0-0x18
q
b system
c
q
b current_memory
b insn_+current_memory
b insn_current_memory
b w3_insn_current_memory
b insn_current_memory
r ww < a
r ww.wasm < a
bt
:q
q
